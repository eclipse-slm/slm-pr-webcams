---
- name: Check input parameter
  ansible.builtin.assert:
    that:
      - (aas_id is defined) and (aas_id | length > 0)

- name: Create AAS
  slm.aas.aas:
    scheme: http
    host: "{{ aas_repository_host }}"
    port: "{{ aas_repository_port }}"
    shell: "{{ aas }}"
  register: create_aas_request
  when: force_create_ass | default(false)
  delegate_to: localhost

- name: Create Webcams Submodel
  slm.aas.submodel:
    scheme: http
    host: "{{ aas_repository_host }}"
    port: "{{ aas_repository_port }}"
    submodel: "{{ aas_submodel }}"
    force: true
  delegate_to: localhost

- name: Set Vars
  ansible.builtin.set_fact:
    id_short: "webcam-type"
    value: "usb-camera"

- name: Define Submodel Element "webcam-type"
  ansible.builtin.set_fact:
    webcam_type:
      idShort: "{{ id_short }}"
      modelType:
        name: "Property"
      valueType: "string"
      value: "{{ value }}"
      kind: Instance
      semanticId:
        keys:
          - type: ConceptDescription
            local: false
            value: "https://fab-os.org/webcam-types"
            idType: "IRDI"

- name: Create Submodel Element "webcam-type"
  slm.aas.submodel:
    scheme: http
    host: "{{ aas_repository_host }}"
    port: "{{ aas_repository_port }}"
    submodel: "{{ webcam_type }}"
    id: "{{ webcam_type.idShort }}"
  delegate_to: localhost

- name: Create Submodel Element Collections
  ansible.builtin.include_tasks: register_submodel_element_collection.yml
  loop: "{{ webcams }}"